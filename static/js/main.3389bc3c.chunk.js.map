{"version":3,"sources":["styles/theme.js","api/index.js","components/search.js","components/results.js","App.js","serviceWorker.js","index.js"],"names":["createMuiTheme","palette","primary","main","secondary","light","text","typography","fontSize","fontFamily","h4","fontWeight","h5","subtitle2","color","overrides","MuiContainer","root","paddingTop","maxWidth","MuiPagination","ul","justifyContent","sendRequest","input","page","a","paramArr","Object","entries","key","value","length","push","API","join","fetch","method","response","json","data","Search","props","useState","latitude","setLatitude","longitude","setLongitude","locality","setLocality","maakond__maakond","setMaakond","country__value","setCountryValue","classes","makeStyles","theme","inputContainer","display","alignItems","flexDirection","breakpoints","down","alignContent","inputs","searchField","marginRight","marginBottom","button","marginTop","className","TextField","id","label","variant","onChange","e","target","to","Button","onClick","searchQuery","Results","searchResults","setPage","rowsPerPage","setRowsPerPage","totalResultsCount","setTotalResultsCount","results","setResults","localityFilter","setLocalityFilter","useEffect","filter","toLowerCase","includes","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","slice","map","row","component","scope","TablePagination","rowsPerPageOptions","count","onChangePage","event","newPage","onChangeRowsPerPage","App","undefined","setSearchQuery","setSearchResults","currentPage","setCurrentPage","totalPages","setTotalPages","prevInputRef","useRef","prevInput","current","areEqualShallow","x","parseInt","ThemeProvider","Container","Paper","Card","CardContent","path","render","Pagination","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3389bc3c.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#0737A0\",\r\n      },\r\n      secondary: {\r\n        main: \"#fff\",\r\n        light: 'rgba(255, 255, 255, 0.5)',\r\n      },\r\n      text: {\r\n        primary: \"#1C2126\",\r\n        secondary: \"#727981\",\r\n      },\r\n    },\r\n    typography: {\r\n      fontSize: 14,\r\n      fontFamily: \"Roboto, sans-serif\",\r\n      h4: {\r\n        fontWeight: \"bold\",\r\n        fontSize: \"1.38rem\",\r\n      },\r\n      h5: {\r\n        fontWeight: \"bold\",\r\n        fontSize: \"1.25rem\",\r\n      },\r\n      subtitle2: {\r\n        fontSize: \"1rem\",\r\n        color: \"#727981\"\r\n      },\r\n    },\r\n\r\n    overrides: {\r\n      MuiContainer: {      \r\n        root: {\r\n          paddingTop: \"20px\",\r\n          maxWidth: \"1200px !important\"\r\n        }\r\n      },\r\n      MuiPagination: {\r\n        ul: {\r\n          justifyContent: \"flex-end\",\r\n        }\r\n      }\r\n    }\r\n});\r\n  ","export const sendRequest = async (input, page) => {\r\n  const paramArr = []\r\n\r\n  for (let [key, value] of Object.entries(input)) {\r\n    if (value){\r\n      if (paramArr.length < 1) {\r\n        paramArr.push(`&${key}=${value}`) \r\n      } else {\r\n        paramArr.push(`${key}=${value}`) \r\n      }\r\n    }\r\n  }\r\n  \r\n  const API = `https://api.geocollections.info/locality/?page=${page}${paramArr.join(\"&\")}`;\r\n\r\n  const response = await fetch(API, {\r\n    method: \"GET\",\r\n  });\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n  \r\n  ","import React, {useState} from 'react';\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport {TextField, Button, makeStyles} from '@material-ui/core';\r\n\r\nexport default function Search(props) {\r\n\r\n    const [latitude, setLatitude] = useState(\"\");\r\n    const [longitude, setLongitude] = useState(\"\");\r\n    const [locality, setLocality] = useState(\"\");\r\n    const [maakond__maakond, setMaakond] = useState(\"\");\r\n    const [country__value, setCountryValue] = useState(\"\");\r\n    \r\n    const classes = makeStyles((theme) => ({\r\n        inputContainer: {\r\n            display:\"flex\",\r\n            alignItems: \"flex-start\",\r\n            flexDirection: \"column\",\r\n            [theme.breakpoints.down('md')]: {\r\n                flexDirection: \"column\",\r\n                alignContent: \"stretch\",\r\n                alignItems: \"center\",\r\n            },\r\n        },\r\n        inputs: {\r\n            display: \"flex\",\r\n            [theme.breakpoints.down('md')]: {\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\"\r\n            },\r\n        },\r\n        searchField: {\r\n            marginRight:\"10px\",\r\n            [theme.breakpoints.down('md')]: {\r\n                marginBottom: \"10px\",\r\n            },\r\n        }, \r\n        button: {\r\n            marginTop: \"10px\",\r\n            marginRight: \"10px\",\r\n  \r\n        }\r\n    }));\r\n\r\n    return(\r\n        <div className={classes().inputContainer}>\r\n            <div className={classes().inputs}>\r\n                <TextField \r\n                    id=\"latitude-input\" \r\n                    label=\"Latitude\" \r\n                    variant=\"outlined\" \r\n                    className={classes().searchField}\r\n                    onChange={(e)=>setLatitude(e.target.value)} \r\n                    value={latitude}\r\n                />\r\n                <TextField \r\n                    id=\"longitude-input\" \r\n                    label=\"Longitude\" \r\n                    variant=\"outlined\" \r\n                    className={classes().searchField}\r\n                    onChange={(e)=>setLongitude(e.target.value)} \r\n                    value={longitude}\r\n                />\r\n                <TextField \r\n                    id=\"locality-input\" \r\n                    label=\"Locality (EE)\" \r\n                    variant=\"outlined\" \r\n                    className={classes().searchField}\r\n                    onChange={(e)=>setLocality(e.target.value)} \r\n                    value={locality}\r\n                />\r\n                <TextField \r\n                    id=\"countyValue-input\" \r\n                    label=\"County (EE)\" \r\n                    variant=\"outlined\" \r\n                    className={classes().searchField}\r\n                    onChange={(e)=>setMaakond(e.target.value)} \r\n                    value={maakond__maakond}\r\n                />\r\n                <TextField \r\n                    id=\"countryValue-input\" \r\n                    label=\"Country (EE)\" \r\n                    variant=\"outlined\" \r\n                    className={classes().searchField}\r\n                    onChange={(e)=>setCountryValue(e.target.value)} \r\n                    value={country__value}\r\n                />\r\n            </div>\r\n            <div className=\"buttons\">\r\n                <Link to=\"/results\">\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        className={classes().button}\r\n                        onClick={\r\n                            ()=> props.searchQuery(\r\n                                    {latitude, longitude, locality, maakond__maakond, country__value}\r\n                            )\r\n                        }\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </Link>\r\n                <Link to=\"/\">\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        className={classes().button}\r\n                        onClick={\r\n                            ()=> {\r\n                                setLatitude(\"\")\r\n                                setLongitude(\"\")\r\n                                setLatitude(\"\")\r\n                                setLocality(\"\")\r\n                                setCountryValue(\"\")\r\n                            }\r\n                        }\r\n                    >\r\n                        Clear\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState,useEffect} from 'react';\r\nimport {\r\n    Table, \r\n    TableBody, \r\n    TableCell, \r\n    TableContainer, \r\n    TableHead, \r\n    TableRow,\r\n    TablePagination,\r\n    TextField,\r\n} from '@material-ui/core';\r\n\r\nexport default function Results({searchResults}) {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10); \r\n    const [totalResultsCount, setTotalResultsCount] = useState(0);\r\n\r\n    const [results, setResults] = useState(\"\")\r\n    const [localityFilter, setLocalityFilter] = useState(\"\")\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n\r\n    useEffect(()=> {\r\n      if (localityFilter) {\r\n        let filter =          \r\n            results\r\n            .filter(e => e.locality?.toLowerCase().includes(localityFilter.toLowerCase()))\r\n            setResults(filter)\r\n            return;\r\n      }\r\n      setResults(searchResults?.results)\r\n      \r\n    }, [localityFilter])\r\n\r\n    useEffect(()=> {\r\n      if(localityFilter) {\r\n        let filter =          \r\n            searchResults.results\r\n            .filter(e => e.locality?.toLowerCase().includes(localityFilter.toLowerCase()))\r\n        setResults(filter)\r\n        return;\r\n      }\r\n      setResults(searchResults?.results)\r\n      \r\n    }, [searchResults])\r\n\r\n    useEffect(()=> {\r\n      if (results)\r\n        setTotalResultsCount(results?.length)\r\n    }, [results])\r\n  \r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(+event.target.value);\r\n      setPage(0);\r\n    };\r\n\r\n    return results ? (\r\n        <TableContainer>\r\n            <TextField \r\n              id=\"filter-locality\" \r\n              label=\"filter locality\" \r\n              onChange={(e)=>setLocalityFilter(e.target.value)}\r\n            />\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>ID</TableCell>\r\n                  <TableCell align=\"right\">Latitude</TableCell>\r\n                  <TableCell align=\"right\">Longitude</TableCell>\r\n                  <TableCell align=\"right\">Locality</TableCell>\r\n                  <TableCell align=\"right\">County</TableCell>\r\n                  <TableCell align=\"right\">Country</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {results?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.id || \"-\"}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.latitude || \"-\"}</TableCell>\r\n                    <TableCell align=\"right\">{row.longitude || \"-\"}</TableCell>\r\n                    <TableCell align=\"right\">{row.locality || \"-\"}</TableCell>\r\n                    <TableCell align=\"right\">{row.maakond__maakond || \"-\"}</TableCell>\r\n                    <TableCell align=\"right\">{row.country__value || \"-\"}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={totalResultsCount || 0}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </TableContainer>\r\n    ) : null\r\n}\r\n","import React, {useState, useEffect, useRef} from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from \"react-router-dom\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Container, Paper, Card, CardContent } from '@material-ui/core';\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport theme from './styles/theme.js'\nimport {sendRequest} from './api/index.js'\n\nimport Search from './components/search'\nimport Results from './components/results'\nimport './App.scss';\n\nfunction App() {\n\n  const [searchQuery, setSearchQuery] = useState(undefined)\n  const [searchResults, setSearchResults] = useState(\"\")\n  const [currentPage, setCurrentPage] = useState(1)\n  const [totalPages, setTotalPages] = useState(undefined)\n\n  const prevInputRef = useRef();\n  const prevInput = prevInputRef.current;\n\n  useEffect(()=> {\n    const areEqualShallow = () => {\n      for(let key in prevInput) {\n          if(prevInput[key] !== searchQuery[key]) {\n              return false;\n          }\n      }\n      return true;\n    }\n    prevInputRef.current = searchQuery\n\n    if(searchQuery && areEqualShallow()) {\n      (async ()=> \n        setSearchResults(await sendRequest(searchQuery, currentPage))\n      )()\n    }\n\n    if (searchQuery && !areEqualShallow()) {\n      setCurrentPage(1)\n      const x = async ()=> \n        setSearchResults(await sendRequest(searchQuery, 1))\n      x()\n    }\n  }, [searchQuery, currentPage, prevInput])\n\n\n  useEffect(()=> {\n    if (searchResults) {\n      setTotalPages(parseInt(searchResults.page?.slice(10)))\n    }\n  }, [searchResults, totalPages])\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <Paper>\n          <Card>\n            <CardContent>\n              <Router>\n                <Route \n                  path=\"/\"\n                  render={()=> (\n                    <Search\n                      searchQuery={(e)=>setSearchQuery(e)}\n                    />\n                  )}\n                >\n                </Route>\n                <Route \n                  path=\"/results\"\n                  render={()=> (\n                    <>\n                      <Results\n                        searchResults={searchResults}\n                      />\n                      <Pagination  \n                        onChange={(e, x)=>setCurrentPage(x)}\n                        count={totalPages || 0} \n                        page={currentPage}\n                      />\n                    </>\n                  )}\n                >\n                </Route>\n              </Router>\n            </CardContent>\n          </Card>\n        </Paper>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}